<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-04-07T11:11:07+02:00</updated><id>http://localhost:4000/</id><title type="html">Transactionale Docs</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Web touchpoint integration</title><link href="http://localhost:4000/web-touchpoints" rel="alternate" type="text/html" title="Web touchpoint integration" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/web-touchpoint</id><content type="html" xml:base="http://localhost:4000/web-touchpoints">&lt;p&gt;If you prefer not to send one more email to your customers, you can use &lt;strong&gt;web touchpoints&lt;/strong&gt;.
Web touchpoints define areas in your website where we will display ads with the same criteria as our transactional emails, but the email address will only be shared:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;after the user clicks on an advertisement (&lt;strong&gt;implicit opt-in&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;after accepting the advertiser’s privacy policy (&lt;strong&gt;double opt-in&lt;/strong&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will ensure your privacy standards remain high.&lt;/p&gt;

&lt;p&gt;The Monetize =&amp;gt; Web touchpoints section of your account provides the necessary Javascript snippets that can be pasted into your website, plus full instructions.
This is an example of Web touchpoint snippet:&lt;/p&gt;

&lt;script&gt;
    // Email and optional zip-code here:
    // window.TR_EMAIL = &quot;uncomment@me&quot;;
    // window.TR_ZIP_CODE = &quot;12345&quot;;

    // Create a div in your page where you want the ads to appear.
    // By default it has to have id tr_touchpoint_container.
    // Or you can specify a custom id like this:
    // window.TR_CONTAINER_ID = &quot;tr_touchpoint_container&quot;;
    
    if(typeof window.TR_EMAIL == 'undefined') {
        throw Error('No TR_EMAIL defined!');
    }

    var _trzip = window.TR_ZIP_CODE || '';
    var _trd = document.createElement('div'); _trd.id='transactionale';document.body.appendChild(_trd);
    var _trs = document.createElement('script');
    _trs.src = 'https://www.transactionale.com/touchpoints/1/embed?auth=XXXXX&amp;zip_code=' + _trzip + '';
        document.getElementsByTagName('head')[0].appendChild(_trs);
&lt;/script&gt;</content><author><name></name></author><summary type="html">If you prefer not to send one more email to your customers, you can use web touchpoints. Web touchpoints define areas in your website where we will display ads with the same criteria as our transactional emails, but the email address will only be shared: after the user clicks on an advertisement (implicit opt-in) after accepting the advertiser’s privacy policy (double opt-in).</summary></entry><entryxml:lang="en"><title type="html">Mail touchpoint integration (server-side)</title><link href="http://localhost:4000/mail-touchpoints" rel="alternate" type="text/html" title="Mail touchpoint integration (server-side)" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/mail-touchpoint</id><content type="html" xml:base="http://localhost:4000/mail-touchpoints">&lt;p&gt;If enabled, Transactionale sends an email to your customers on your behalf for every transaction they make on your website. In order to do that, you must call our REST API after every order you receive. Calls must be authenticated using the API key you find in the Integrate section of your account. 
Only three data fields are required, while the last is optional:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Country: the standard ISO two-letter code for the shop the order was placed on&lt;/li&gt;
  &lt;li&gt;Email: the customer’s email address&lt;/li&gt;
  &lt;li&gt;First name: the customer’s first name, so we can send a personalized email&lt;/li&gt;
  &lt;li&gt;Zip code (optional): if a zip code is provided, we will prioritize ads that are targeted for that area.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The API call is straightforward. Our website has examples in the most common programming languages.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NOTE: you can also integrate this call client-side. We suggest placing it server-side for a matter of security, because it involves personal information. However, it’s up to you to decide the best strategy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;integration-examples&quot;&gt;Integration examples&lt;/h3&gt;

&lt;p&gt;We have a deal of examples in the most common server-side languages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/php&quot;&gt;Integration example in PHP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/ruby&quot;&gt;Integration example in Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/python&quot;&gt;Integration example in Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/nodejs&quot;&gt;Integration example in NodeJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/csharp&quot;&gt;Integration example in C#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/curl&quot;&gt;Integration example in cURL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We use &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; in our examples, but feel free to use any framework or library capable of making HTTP POST requests&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remember to customise the variables in the examples - the snippet will not work as-is&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;You have a personal API key in the Integrate section of your account&lt;/li&gt;
  &lt;li&gt;The HTTP request’s content type must be &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The body of the HTTP request must contain &lt;strong&gt;a JSON-encoded object with your data&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">If enabled, Transactionale sends an email to your customers on your behalf for every transaction they make on your website. In order to do that, you must call our REST API after every order you receive. Calls must be authenticated using the API key you find in the Integrate section of your account. Only three data fields are required, while the last is optional:</summary></entry><entry><title type="html">Web touchpoint integration</title><link href="http://localhost:4000/it/web-touchpoints" rel="alternate" type="text/html" title="Web touchpoint integration" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/web-touchpoint</id><content type="html" xml:base="http://localhost:4000/it/web-touchpoints">&lt;p&gt;If you prefer not to send one more email to your customers, you can use &lt;strong&gt;web touchpoints&lt;/strong&gt;.
Web touchpoints define areas in your website where we will display ads with the same criteria as our transactional emails, but the email address will only be shared:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;after the user clicks on an advertisement (&lt;strong&gt;implicit opt-in&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;after accepting the advertiser’s privacy policy (&lt;strong&gt;double opt-in&lt;/strong&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will ensure your privacy standards remain high.&lt;/p&gt;

&lt;p&gt;The Monetize =&amp;gt; Web touchpoints section of your account provides the necessary Javascript snippets that can be pasted into your website, plus full instructions.
This is an example of Web touchpoint snippet:&lt;/p&gt;

&lt;script&gt;
    // Email and optional zip-code here:
    // window.TR_EMAIL = &quot;uncomment@me&quot;;
    // window.TR_ZIP_CODE = &quot;12345&quot;;

    // Create a div in your page where you want the ads to appear.
    // By default it has to have id tr_touchpoint_container.
    // Or you can specify a custom id like this:
    // window.TR_CONTAINER_ID = &quot;tr_touchpoint_container&quot;;
    
    if(typeof window.TR_EMAIL == 'undefined') {
        throw Error('No TR_EMAIL defined!');
    }

    var _trzip = window.TR_ZIP_CODE || '';
    var _trd = document.createElement('div'); _trd.id='transactionale';document.body.appendChild(_trd);
    var _trs = document.createElement('script');
    _trs.src = 'https://www.transactionale.com/touchpoints/1/embed?auth=XXXXX&amp;zip_code=' + _trzip + '';
        document.getElementsByTagName('head')[0].appendChild(_trs);
&lt;/script&gt;</content><author><name></name></author><summary type="html">If you prefer not to send one more email to your customers, you can use web touchpoints. Web touchpoints define areas in your website where we will display ads with the same criteria as our transactional emails, but the email address will only be shared: after the user clicks on an advertisement (implicit opt-in) after accepting the advertiser’s privacy policy (double opt-in).</summary></entry><entryxml:lang="it"><title type="html">Integrazione del touchpoint mail (server-side)</title><link href="http://localhost:4000/it/mail-touchpoints" rel="alternate" type="text/html" title="Integrazione del touchpoint mail (server-side)" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/mail-touchpoint</id><content type="html" xml:base="http://localhost:4000/it/mail-touchpoints">&lt;p&gt;Se abilitata, Transactionale manda un’email ai tuoi client a nome tuo per ogni transazione che essi fanno sul tuo sito. Per permettere questa operazione, bisogna chiamare la nostra API REST dopo ogni ordine che ricevi. Le chiamate all’API devono essere autenticate con la chiave API (API key) che troverai nella sezione “Integrazione” del tuo Account. 
Sono richiesti solo tre campi dati, di cui l’ultimo opzionale:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Country (Stato): il codice nazionale ISO di due lettere (&lt;code class=&quot;highlighter-rouge&quot;&gt;IT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;DE&lt;/code&gt; …) per la nazione sulla quale è stato piazzato l’ordine&lt;/li&gt;
  &lt;li&gt;Email: l’indirizzo email del cliente&lt;/li&gt;
  &lt;li&gt;First name (Nome): il nome proprio del cliente, in modo da potergli mandare una mail personalizzata&lt;/li&gt;
  &lt;li&gt;Zip code (CAP): se verrà fornito un codice CAP del cliente (Zip Code fuori dall’Italia), verranno fornite con priorità più alta le campagne geolocalizzate, in modo che siano più efficaci&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La chiamata API è molto semplice. Di seguito troverete esempi nei linguaggi di programmazione più comuni.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NOTA: è possibile integrare questa chiamata lato client, ma suggeriamo di implementarla lato server per motivi di sicurezza, perché coinvolge informazioni sensibili. Siete tuttavia liberi di optare per la strategia che riterrete opportuna.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;esempi-di-integrazione&quot;&gt;Esempi di integrazione&lt;/h3&gt;

&lt;p&gt;Abbiamo un po’ di esempi nei linguaggi server-side più comuni:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/php&quot;&gt;Esempio di integrazione in PHP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/ruby&quot;&gt;Esempio di integrazione in Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/python&quot;&gt;Esempio di integrazione in Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/nodejs&quot;&gt;Esempio di integrazione in NodeJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/csharp&quot;&gt;Esempio di integrazione in C#&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./integrations/curl&quot;&gt;Esempio di integrazione in cURL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Se abilitata, Transactionale manda un’email ai tuoi client a nome tuo per ogni transazione che essi fanno sul tuo sito. Per permettere questa operazione, bisogna chiamare la nostra API REST dopo ogni ordine che ricevi. Le chiamate all’API devono essere autenticate con la chiave API (API key) che troverai nella sezione “Integrazione” del tuo Account. Sono richiesti solo tre campi dati, di cui l’ultimo opzionale:</summary></entry><entry><title type="html">Esempio di integrazione Ruby</title><link href="http://localhost:4000/it/integrations/ruby" rel="alternate" type="text/html" title="Esempio di integrazione Ruby" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/integrations/ruby</id><content type="html" xml:base="http://localhost:4000/it/integrations/ruby">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# These code snippets use an open-source library. http://unirest.io/ruby&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Unirest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.transactionale.com/api/v1/transaction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;X-Authorization&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Accept&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;your-customer-email@mailprovider.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;country&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;first_name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;customer-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;zip_code&quot;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;00001&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html"># These code snippets use an open-source library. http://unirest.io/ruby response = Unirest.post &quot;https://www.transactionale.com/api/v1/transaction&quot;, headers:{ &quot;X-Authorization&quot; =&amp;gt; &quot;YOUR_API_KEY&quot;, &quot;Content-Type&quot; =&amp;gt; &quot;application/json&quot;, &quot;Accept&quot; =&amp;gt; &quot;application/json&quot; }, parameters:{ &quot;email&quot; =&amp;gt; &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot; =&amp;gt; &quot;it&quot;, &quot;first_name&quot; =&amp;gt; &quot;customer-name&quot;, &quot;zip_code&quot;:&quot;00001&quot; }.to_json</summary></entry><entry><title type="html">Esempio di integrazione Python</title><link href="http://localhost:4000/it/integrations/python" rel="alternate" type="text/html" title="Esempio di integrazione Python" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/integrations/python</id><content type="html" xml:base="http://localhost:4000/it/integrations/python">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# These code snippets use an open-source library. http://unirest.io/python&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unirest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.transactionale.com/api/v1/transaction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;X-Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/json&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;your-customer-email@mailprovider.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;country&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;it&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;first_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer-name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;zip_code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;00001&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html"># These code snippets use an open-source library. http://unirest.io/python response = unirest.post(&quot;https://www.transactionale.com/api/v1/transaction&quot;, headers={ &quot;X-Authorization&quot;: &quot;YOUR_API_KEY&quot;, &quot;Content-Type&quot;: &quot;application/json&quot;, &quot;Accept&quot;: &quot;application/json&quot; }, params=json.dumps({ &quot;email&quot;: &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;: &quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;:&quot;00001&quot; }) )</summary></entry><entry><title type="html">Esempio di integrazione PHP</title><link href="http://localhost:4000/it/integrations/php" rel="alternate" type="text/html" title="Esempio di integrazione PHP" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/integrations/php</id><content type="html" xml:base="http://localhost:4000/it/integrations/php">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// These code snippets use an open-source library. http://unirest.io/php
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Unirest\Request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.transactionale.com/api/v1/transaction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;X-Authorization&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Accept&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'{ &quot;email&quot; : &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;:&quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;:&quot;00001&quot; }'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">&amp;lt;?php // These code snippets use an open-source library. http://unirest.io/php $response = Unirest\Request::post(&quot;https://www.transactionale.com/api/v1/transaction&quot;, array( &quot;X-Authorization&quot; =&amp;gt; &quot;YOUR_API_KEY&quot;, &quot;Content-Type&quot; =&amp;gt; &quot;application/json&quot;, &quot;Accept&quot; =&amp;gt; &quot;application/json&quot; ), '{ &quot;email&quot; : &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;:&quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;:&quot;00001&quot; }' );</summary></entry><entry><title type="html">Esempio di integrazione NodeJS</title><link href="http://localhost:4000/it/integrations/nodejs" rel="alternate" type="text/html" title="Esempio di integrazione NodeJS" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/integrations/nodejs</id><content type="html" xml:base="http://localhost:4000/it/integrations/nodejs">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// These code snippets use an open-source library. http://unirest.io/nodejs&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;unirest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.transactionale.com/api/v1/transaction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;X-Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{ &quot;email&quot; : &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;:&quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;:&quot;00001&quot; }'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">// These code snippets use an open-source library. http://unirest.io/nodejs unirest.post(&quot;https://www.transactionale.com/api/v1/transaction&quot;) .header(&quot;X-Authorization&quot;, &quot;YOUR_API_KEY&quot;) .header(&quot;Content-Type&quot;, &quot;application/json&quot;) .header(&quot;Accept&quot;, &quot;application/json&quot;) .send('{ &quot;email&quot; : &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;:&quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;:&quot;00001&quot; }') .end(function (result) { console.log(result.status, result.headers, result.body); });</summary></entry><entry><title type="html">Esempio di integrazione C#</title><link href="http://localhost:4000/iT/integrations/csharp" rel="alternate" type="text/html" title="Esempio di integrazione C#" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/iT/integrations/dotnet</id><content type="html" xml:base="http://localhost:4000/iT/integrations/csharp">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// These code snippets use an open-source library. http://unirest.io/net
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unirest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.transactionale.com/api/v1/transaction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;YOUR_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{ \&quot;email\&quot; : \&quot;your-customer-email@mailprovider.com\&quot;, \&quot;country\&quot;:\&quot;it\&quot;, \&quot;first_name\&quot;:\&quot;customer-name\&quot;, \&quot;zip_code\&quot;:\&quot;00001\&quot; }&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;asJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">// These code snippets use an open-source library. http://unirest.io/net Task&amp;lt;HttpResponse&amp;lt;MyClass&amp;gt;&amp;gt; response = Unirest.post(&quot;https://www.transactionale.com/api/v1/transaction&quot;) .header(&quot;X-Authorization&quot;, &quot;YOUR_API_KEY&quot;) .header(&quot;Content-Type&quot;, &quot;application/json&quot;) .header(&quot;Accept&quot;, &quot;application/json&quot;) .body(&quot;{ \&quot;email\&quot; : \&quot;your-customer-email@mailprovider.com\&quot;, \&quot;country\&quot;:\&quot;it\&quot;, \&quot;first_name\&quot;:\&quot;customer-name\&quot;, \&quot;zip_code\&quot;:\&quot;00001\&quot; }&quot;) .asJson();</summary></entry><entry><title type="html">Esempio di integrazione cURL</title><link href="http://localhost:4000/it/integrations/curl" rel="alternate" type="text/html" title="Esempio di integrazione cURL" /><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-16T00:00:00+01:00</updated><id>http://localhost:4000/it/integrations/curl</id><content type="html" xml:base="http://localhost:4000/it/integrations/curl">&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;curl -XPOST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -H &lt;span class=&quot;s1&quot;&gt;'X-Authorization: YOUR_API_KEY'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -H &lt;span class=&quot;s2&quot;&gt;&quot;Content-type: application/json&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  -d &lt;span class=&quot;s1&quot;&gt;'{ &quot;email&quot; : &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;:&quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;: &quot;00001&quot; }'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'https://www.transactionale.com/api/v1/transaction'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Qualche nota:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Qui usiamo la libreria &lt;a href=&quot;http://unirest.io/&quot;&gt;Unirest&lt;/a&gt; nei nostri esempi, ma &lt;strong&gt;potete usare liberamente qualsiasi framework o libreria in grado di fare request POST via HTTP&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando copiate l’esempio ricordatevi di personalizzare le variabili usate negli esempi - lo snippet di codice non funzinerà se lasciato come nell’esempio&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Avete una API key personale nella sezione “Integrazione” del vostro account. Copiate questa chiave e sostituitela nel codice al posto della stringa &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_API_KEY&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Il content type della request HTTP deve essere &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt; &lt;em&gt;(nell’esempio questo header viene già impostato)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Il body della request HTTP request deve contenere &lt;strong&gt;i dati d’interesse codificati come JSON&lt;/strong&gt; &lt;em&gt;(l’esempio mostra come)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">$ curl -XPOST \ -H 'X-Authorization: YOUR_API_KEY' \ -H &quot;Content-type: application/json&quot; \ -d '{ &quot;email&quot; : &quot;your-customer-email@mailprovider.com&quot;, &quot;country&quot;:&quot;it&quot;, &quot;first_name&quot;:&quot;customer-name&quot;, &quot;zip_code&quot;: &quot;00001&quot; }' \ 'https://www.transactionale.com/api/v1/transaction'</summary></entry></feed>